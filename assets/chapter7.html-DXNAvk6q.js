import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as a,o as e}from"./app-K29S6iA3.js";const n={};function t(h,i){return e(),l("div",null,i[0]||(i[0]=[a(`<h1 id="第7讲-fpga调试与测试技术深度解析" tabindex="-1"><a class="header-anchor" href="#第7讲-fpga调试与测试技术深度解析"><span>第7讲：FPGA调试与测试技术深度解析</span></a></h1><h2 id="_7-1-在线逻辑分析仪-ila-高级应用" tabindex="-1"><a class="header-anchor" href="#_7-1-在线逻辑分析仪-ila-高级应用"><span>7.1 在线逻辑分析仪(ILA)高级应用</span></a></h2><h3 id="_7-1-1-智能触发配置" tabindex="-1"><a class="header-anchor" href="#_7-1-1-智能触发配置"><span>7.1.1 智能触发配置</span></a></h3><ol><li>多条件组合触发逻辑设计 <ul><li>边沿/电平/计数复合触发模式</li><li>触发条件布尔表达式配置（AND/OR/NOT）</li></ul><div class="language-tcl line-numbers-mode" data-highlighter="shiki" data-ext="tcl" data-title="tcl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">set_property TRIGGER_COMPARE_LOGIC expr { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (TRIGGER0 &amp; TRIGGER1) | (!TRIGGER2[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] &gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&#39;hA) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} [get_hw_ilas]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>窗口触发进阶应用 <ul><li>预触发/后触发数据捕获比例优化</li><li>存储深度与采样率关系公式： $$存储深度 = \\frac{片上BRAM容量}{数据位宽 \\times 通道数}$$</li></ul></li></ol><h3 id="_7-1-2-多核调试技术" tabindex="-1"><a class="header-anchor" href="#_7-1-2-多核调试技术"><span>7.1.2 多核调试技术</span></a></h3><ol><li>跨时钟域同步调试方案 <ul><li>异步FIFO数据一致性检查</li><li>时钟域交叉（CDC）验证流程</li></ul></li><li>分布式ILA组网调试 <ul><li>多Tile间触发信号同步机制</li><li>全局触发网络(GTN)配置流程</li></ul></li></ol><p><img src="https://via.placeholder.com/600x200?text=Multi-core+ILA+Debug+Architecture" alt="ILA多核调试架构"></p><h2 id="_7-2-虚拟输入输出-vio-交互式调试" tabindex="-1"><a class="header-anchor" href="#_7-2-虚拟输入输出-vio-交互式调试"><span>7.2 虚拟输入输出(VIO)交互式调试</span></a></h2><h3 id="_7-2-1-动态调试接口" tabindex="-1"><a class="header-anchor" href="#_7-2-1-动态调试接口"><span>7.2.1 动态调试接口</span></a></h3><ol><li>实时信号注入技术 <ul><li>伪随机激励生成算法</li><li>基于XML的激励模式描述</li></ul><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stimulus_pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cycle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;10&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cycle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hex&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;A5&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;data[3:0] != 4&#39;hF&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stimulus_pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>片上监控系统 <ul><li>关键路径时序余量监测</li><li>温度/电压传感器数据可视化</li></ul></li></ol><h3 id="_7-2-2-联合调试方案" tabindex="-1"><a class="header-anchor" href="#_7-2-2-联合调试方案"><span>7.2.2 联合调试方案</span></a></h3><ol><li>ILA+VIO协同工作流程 <ul><li>触发条件与激励注入联动</li><li>调试状态机设计：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[初始状态] -&gt; [激励注入] -&gt; [触发捕获] -&gt; [数据分析]</span></span>
<span class="line"><span>      ^                             |</span></span>
<span class="line"><span>      |_____________________________|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_7-3-覆盖率驱动的验证方法" tabindex="-1"><a class="header-anchor" href="#_7-3-覆盖率驱动的验证方法"><span>7.3 覆盖率驱动的验证方法</span></a></h2><h3 id="_7-3-1-代码覆盖率分析" tabindex="-1"><a class="header-anchor" href="#_7-3-1-代码覆盖率分析"><span>7.3.1 代码覆盖率分析</span></a></h3><table><thead><tr><th>覆盖率类型</th><th>测量标准</th><th>目标值</th></tr></thead><tbody><tr><td>行覆盖率</td><td>可执行代码行</td><td>≥95%</td></tr><tr><td>分支覆盖率</td><td>if/case语句路径</td><td>≥90%</td></tr><tr><td>条件覆盖率</td><td>布尔表达式组合</td><td>≥80%</td></tr></tbody></table><h3 id="_7-3-2-功能覆盖率" tabindex="-1"><a class="header-anchor" href="#_7-3-2-功能覆盖率"><span>7.3.2 功能覆盖率</span></a></h3><h1 id="第7讲-fpga调试与测试技术深度解析-1" tabindex="-1"><a class="header-anchor" href="#第7讲-fpga调试与测试技术深度解析-1"><span>第7讲：FPGA调试与测试技术深度解析</span></a></h1><h2 id="_7-1-在线逻辑分析仪-ila-高级应用-1" tabindex="-1"><a class="header-anchor" href="#_7-1-在线逻辑分析仪-ila-高级应用-1"><span>7.1 在线逻辑分析仪(ILA)高级应用</span></a></h2><h3 id="_7-1-1-智能触发配置-1" tabindex="-1"><a class="header-anchor" href="#_7-1-1-智能触发配置-1"><span>7.1.1 智能触发配置</span></a></h3><ol><li>多条件组合触发逻辑设计 <ul><li>边沿/电平/计数复合触发模式</li><li>触发条件布尔表达式配置（AND/OR/NOT）</li></ul><div class="language-tcl line-numbers-mode" data-highlighter="shiki" data-ext="tcl" data-title="tcl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">set_property TRIGGER_COMPARE_LOGIC expr { </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (TRIGGER0 &amp; TRIGGER1) | (!TRIGGER2[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] &gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&#39;hA) </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} [get_hw_ilas]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>窗口触发进阶应用 <ul><li>预触发/后触发数据捕获比例优化</li><li>存储深度与采样率关系公式： $$存储深度 = \\frac{片上BRAM容量}{数据位宽 \\times 通道数}$$</li></ul></li></ol><h3 id="_7-1-2-多核调试技术-1" tabindex="-1"><a class="header-anchor" href="#_7-1-2-多核调试技术-1"><span>7.1.2 多核调试技术</span></a></h3><ol><li>跨时钟域同步调试方案 <ul><li>异步FIFO数据一致性检查</li><li>时钟域交叉（CDC）验证流程</li></ul></li><li>分布式ILA组网调试 <ul><li>多Tile间触发信号同步机制</li><li>全局触发网络(GTN)配置流程</li></ul></li></ol><p><img src="https://via.placeholder.com/600x200?text=Multi-core+ILA+Debug+Architecture" alt="ILA多核调试架构"></p><h2 id="_7-2-虚拟输入输出-vio-交互式调试-1" tabindex="-1"><a class="header-anchor" href="#_7-2-虚拟输入输出-vio-交互式调试-1"><span>7.2 虚拟输入输出(VIO)交互式调试</span></a></h2><h3 id="_7-2-1-动态调试接口-1" tabindex="-1"><a class="header-anchor" href="#_7-2-1-动态调试接口-1"><span>7.2.1 动态调试接口</span></a></h3><ol><li>实时信号注入技术 <ul><li>伪随机激励生成算法</li><li>基于XML的激励模式描述</li></ul><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stimulus_pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cycle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;10&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cycle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hex&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;A5&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;data[3:0] != 4&#39;hF&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stimulus_pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>片上监控系统 <ul><li>关键路径时序余量监测</li><li>温度/电压传感器数据可视化</li></ul></li></ol><h3 id="_7-2-2-联合调试方案-1" tabindex="-1"><a class="header-anchor" href="#_7-2-2-联合调试方案-1"><span>7.2.2 联合调试方案</span></a></h3><ol><li>ILA+VIO协同工作流程 <ul><li>触发条件与激励注入联动</li><li>调试状态机设计：</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[初始状态] -&gt; [激励注入] -&gt; [触发捕获] -&gt; [数据分析]</span></span>
<span class="line"><span>      ^                             |</span></span>
<span class="line"><span>      |_____________________________|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_7-3-覆盖率驱动的验证方法-1" tabindex="-1"><a class="header-anchor" href="#_7-3-覆盖率驱动的验证方法-1"><span>7.3 覆盖率驱动的验证方法</span></a></h2><h3 id="_7-3-1-代码覆盖率分析-1" tabindex="-1"><a class="header-anchor" href="#_7-3-1-代码覆盖率分析-1"><span>7.3.1 代码覆盖率分析</span></a></h3><table><thead><tr><th>覆盖率类型</th><th>测量标准</th><th>目标值</th></tr></thead><tbody><tr><td>行覆盖率</td><td>可执行代码行</td><td>≥95%</td></tr><tr><td>分支覆盖率</td><td>if/case语句路径</td><td>≥90%</td></tr><tr><td>条件覆盖率</td><td>布尔表达式组合</td><td>≥80%</td></tr></tbody></table><h3 id="_7-3-2-功能覆盖率分析" tabindex="-1"><a class="header-anchor" href="#_7-3-2-功能覆盖率分析"><span>7.3.2 功能覆盖率分析</span></a></h3><ol><li>覆盖组(covergroup)设计规范 <ul><li>交叉覆盖项定义方法</li><li>权重分配与目标达成算法</li></ul><div class="language-systemverilog line-numbers-mode" data-highlighter="shiki" data-ext="systemverilog" data-title="systemverilog" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>covergroup cg_uart_transaction;</span></span>
<span class="line"><span>  baud_rate: coverpoint baud {</span></span>
<span class="line"><span>    bins standard = {9600, 19200, 38400, 57600, 115200};</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  data_length: coverpoint length {</span></span>
<span class="line"><span>    bins short = {[1:8]};</span></span>
<span class="line"><span>    bins long = {[9:16]};</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  cross baud_rate, data_length;</span></span>
<span class="line"><span>endgroup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>覆盖率合并技术 <ul><li>分布式验证环境数据聚合</li><li>覆盖率收敛曲线分析方法</li></ul></li></ol><h2 id="_7-4-边界扫描测试进阶" tabindex="-1"><a class="header-anchor" href="#_7-4-边界扫描测试进阶"><span>7.4 边界扫描测试进阶</span></a></h2><h3 id="_7-4-1-jtag协议解析" tabindex="-1"><a class="header-anchor" href="#_7-4-1-jtag协议解析"><span>7.4.1 JTAG协议解析</span></a></h3><ol><li>TAP控制器状态迁移 <img src="https://via.placeholder.com/400x300?text=TAP+Controller+State+Machine" alt="TAP状态机"></li><li>边界扫描描述语言(BSDL) <ul><li>器件特性描述语法</li><li>安全约束条件定义</li></ul></li></ol><h3 id="_7-4-2-高级应用技术" tabindex="-1"><a class="header-anchor" href="#_7-4-2-高级应用技术"><span>7.4.2 高级应用技术</span></a></h3><ol><li>板级互连测试 <ul><li>短路/开路故障模型</li><li>测试向量生成算法</li></ul></li><li>在线编程(ISP)实现 <ul><li>Flash配置接口设计</li><li>多器件级联编程协议</li></ul></li></ol><h2 id="_7-5-实际工程案例分析" tabindex="-1"><a class="header-anchor" href="#_7-5-实际工程案例分析"><span>7.5 实际工程案例分析</span></a></h2><h3 id="案例1-高速serdes调试" tabindex="-1"><a class="header-anchor" href="#案例1-高速serdes调试"><span>案例1：高速SerDes调试</span></a></h3><ol><li>眼图测量与均衡参数优化 <ul><li>预加重/去加重配置</li><li>误码率(BER)测试方法</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 眼图扫描TCL脚本</span></span>
<span class="line"><span>set_property EYE_SCAN_MODE Horizontal [get_hw_ilas 1]</span></span>
<span class="line"><span>launch_hw_ila_eye_scan -use_hw_ila 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="案例2-多板卡系统验证" tabindex="-1"><a class="header-anchor" href="#案例2-多板卡系统验证"><span>案例2：多板卡系统验证</span></a></h3><ol><li>分布式验证架构 <ul><li>测试任务动态分配算法</li><li>跨板卡时钟同步方案</li></ul></li><li>系统级覆盖率分析 <ul><li>端到端事务追踪</li><li>性能瓶颈分析方法</li></ul></li></ol>`,43)]))}const p=s(n,[["render",t],["__file","chapter7.html.vue"]]),k=JSON.parse('{"path":"/book/chapter7.html","title":"第7讲：FPGA调试与测试技术深度解析","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"7.1 在线逻辑分析仪(ILA)高级应用","slug":"_7-1-在线逻辑分析仪-ila-高级应用","link":"#_7-1-在线逻辑分析仪-ila-高级应用","children":[{"level":3,"title":"7.1.1 智能触发配置","slug":"_7-1-1-智能触发配置","link":"#_7-1-1-智能触发配置","children":[]},{"level":3,"title":"7.1.2 多核调试技术","slug":"_7-1-2-多核调试技术","link":"#_7-1-2-多核调试技术","children":[]}]},{"level":2,"title":"7.2 虚拟输入输出(VIO)交互式调试","slug":"_7-2-虚拟输入输出-vio-交互式调试","link":"#_7-2-虚拟输入输出-vio-交互式调试","children":[{"level":3,"title":"7.2.1 动态调试接口","slug":"_7-2-1-动态调试接口","link":"#_7-2-1-动态调试接口","children":[]},{"level":3,"title":"7.2.2 联合调试方案","slug":"_7-2-2-联合调试方案","link":"#_7-2-2-联合调试方案","children":[]}]},{"level":2,"title":"7.3 覆盖率驱动的验证方法","slug":"_7-3-覆盖率驱动的验证方法","link":"#_7-3-覆盖率驱动的验证方法","children":[{"level":3,"title":"7.3.1 代码覆盖率分析","slug":"_7-3-1-代码覆盖率分析","link":"#_7-3-1-代码覆盖率分析","children":[]},{"level":3,"title":"7.3.2 功能覆盖率","slug":"_7-3-2-功能覆盖率","link":"#_7-3-2-功能覆盖率","children":[]}]},{"level":2,"title":"7.1 在线逻辑分析仪(ILA)高级应用","slug":"_7-1-在线逻辑分析仪-ila-高级应用-1","link":"#_7-1-在线逻辑分析仪-ila-高级应用-1","children":[{"level":3,"title":"7.1.1 智能触发配置","slug":"_7-1-1-智能触发配置-1","link":"#_7-1-1-智能触发配置-1","children":[]},{"level":3,"title":"7.1.2 多核调试技术","slug":"_7-1-2-多核调试技术-1","link":"#_7-1-2-多核调试技术-1","children":[]}]},{"level":2,"title":"7.2 虚拟输入输出(VIO)交互式调试","slug":"_7-2-虚拟输入输出-vio-交互式调试-1","link":"#_7-2-虚拟输入输出-vio-交互式调试-1","children":[{"level":3,"title":"7.2.1 动态调试接口","slug":"_7-2-1-动态调试接口-1","link":"#_7-2-1-动态调试接口-1","children":[]},{"level":3,"title":"7.2.2 联合调试方案","slug":"_7-2-2-联合调试方案-1","link":"#_7-2-2-联合调试方案-1","children":[]}]},{"level":2,"title":"7.3 覆盖率驱动的验证方法","slug":"_7-3-覆盖率驱动的验证方法-1","link":"#_7-3-覆盖率驱动的验证方法-1","children":[{"level":3,"title":"7.3.1 代码覆盖率分析","slug":"_7-3-1-代码覆盖率分析-1","link":"#_7-3-1-代码覆盖率分析-1","children":[]},{"level":3,"title":"7.3.2 功能覆盖率分析","slug":"_7-3-2-功能覆盖率分析","link":"#_7-3-2-功能覆盖率分析","children":[]}]},{"level":2,"title":"7.4 边界扫描测试进阶","slug":"_7-4-边界扫描测试进阶","link":"#_7-4-边界扫描测试进阶","children":[{"level":3,"title":"7.4.1 JTAG协议解析","slug":"_7-4-1-jtag协议解析","link":"#_7-4-1-jtag协议解析","children":[]},{"level":3,"title":"7.4.2 高级应用技术","slug":"_7-4-2-高级应用技术","link":"#_7-4-2-高级应用技术","children":[]}]},{"level":2,"title":"7.5 实际工程案例分析","slug":"_7-5-实际工程案例分析","link":"#_7-5-实际工程案例分析","children":[{"level":3,"title":"案例1：高速SerDes调试","slug":"案例1-高速serdes调试","link":"#案例1-高速serdes调试","children":[]},{"level":3,"title":"案例2：多板卡系统验证","slug":"案例2-多板卡系统验证","link":"#案例2-多板卡系统验证","children":[]}]}],"git":{"createdTime":1738908357000,"updatedTime":1749345260000,"contributors":[{"name":"Xianzhong Zhou","username":"Xianzhong Zhou","email":"zhouxzh@gdut.edu.cn","commits":2,"url":"https://github.com/Xianzhong Zhou"}]},"readingTime":{"minutes":4.04,"words":1212},"filePathRelative":"book/chapter7.md","localizedDate":"2025年2月7日"}');export{p as comp,k as data};
